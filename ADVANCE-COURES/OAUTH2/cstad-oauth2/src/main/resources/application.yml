logging:
  level:
    org.springframework.security: trace
spring:
#  security:
#    oauth2:
#      authorizationserver:
#        client:
#          client-1:
#            #require-authorization-consent: true
#            registration:
#              client-id: "client"
#              # the client secret is "secret" (without quotes)
#              client-secret: "{bcrypt} 1234"
#              client-authentication-methods: "client-authentication-basic,none,client-secret-post"
#              authorization-grant-types: "client_credentials,authorization_code,refresh_token"
#              redirect-uris: http://localhost:8082/login/oauth2/code/spring
#              scopes: "openid"
#            token:
#              access-token-time-to-live: 30s
  datasource:
    url: jdbc:postgresql://localhost:5432/learn_oauth
    username: postgres
    password: root
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
server:
  port: 9021
